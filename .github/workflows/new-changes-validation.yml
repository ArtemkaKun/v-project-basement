name: New changes validation

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  simple-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        trimming: [ null , -skip-unused ]
        memory-management: [ null , -autofree ]
    steps:
      - name: Install V
        uses: vlang/setup-v@v1.3
        with:
          check-latest: true

      - name: Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v3

      - name: ${{ matrix.trimming }} ${{ matrix.memory-management }} build
        run: v ${{ matrix.trimming }} ${{ matrix.memory-management }} .

  test:
    needs: simple-build
    runs-on: ubuntu-latest
    steps:
      - name: Install V
        uses: vlang/setup-v@v1.3
        with:
          check-latest: true

      - name: Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v3

      - name: Run tests
        run: v test .

  different-compilers:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [ gcc, clang ]
        trimming: [ null , -skip-unused ]
        memory-management: [ null , -autofree ]
        optimization: [ null , -prod ]
    steps:
      - name: Install V
        uses: vlang/setup-v@v1.3
        with:
          check-latest: true

      - name: Set up GCC
        run: |
          sudo apt-get update
          sudo apt-get install --quiet -y build-essential

      - name: Set up Clang
        run: |
          sudo apt-get update
          sudo apt-get install --quiet -y clang

      - name: Checkout ${{ github.event.repository.name }}
        uses: actions/checkout@v3

      - name: ${{ matrix.compiler }} ${{ matrix.trimming }} ${{ matrix.optimization }} ${{ matrix.memory-management }} build
        run: v -cc ${{ matrix.compiler }} ${{ matrix.trimming }} ${{ matrix.optimization }} ${{ matrix.memory-management }} .
